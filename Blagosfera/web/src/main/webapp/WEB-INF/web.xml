<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <session-config>
        <session-timeout>5</session-timeout>
    </session-config>

    <context-param>
        <!-- config for ContextLoaderListener -->
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/applicationContext.xml,
            classpath*:/redisContext.xml,
            classpath*:/securityContext.xml,
            classpath*:/mvcContext.xml,
            classpath*:/loggingContext.xml,
            classpath*:/messagingContext.xml,
            classpath*:/jcrContext.xml,
            classpath*:/cryptContext.xml,
            classpath*:/votingDataContext.xml,
            classpath*:/votingCoreContext.xml,
            classpath*:/signServiceContext.xml
        </param-value>
    </context-param>

	<servlet>
		<servlet-name>kabinet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/servletContext.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
	</servlet>

	<servlet-mapping>
		<servlet-name>kabinet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

    <filter>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>timeFilter</filter-name>
        <filter-class>ru.radom.kabinet.web.filters.TimeFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>timeFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>multiReadFilter</filter-name>
        <filter-class>ru.radom.kabinet.web.filters.MultiReadFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>multiReadFilter</filter-name>
        <url-pattern>/cashbox/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>jsonFilter</filter-name>
        <filter-class>ru.radom.kabinet.web.filters.JsonFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>jsonFilter</filter-name>
        <url-pattern>*.json</url-pattern>
    </filter-mapping>

	<filter>
		<filter-name>encoding-filter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

    <filter-mapping>
        <filter-name>encoding-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<filter>
    	<filter-name>urlRewriteFilter</filter-name>
    	<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    	<async-supported>true</async-supported>
	</filter>

    <filter-mapping>
        <filter-name>urlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>LoggingContextFilter</filter-name>
        <filter-class>ru.askor.blagosfera.logging.web.LoggingContextFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>LoggingContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
        <listener-class>ru.askor.blagosfera.logging.web.LoggingContextListener</listener-class>
    </listener>

	<error-page>
		<exception-type>org.springframework.security.web.authentication.rememberme.CookieTheftException</exception-type>
		<location>/login?redirected</location>
	</error-page>

    <error-page>
        <error-code>403</error-code>
        <location>/error/403</location>
    </error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/error/404</location>
	</error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error/500</location>
    </error-page>

</web-app>